{"version":3,"sources":["components/InfoBox/InfoBox.js","components/Table/Table.js","components/util/util.js","components/Map/Map.js","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js","components/Footer/Footer.module.css"],"names":["InfoBox","title","cases","total","active","isRed","props","console","log","Card","onClick","className","CardContent","Typography","color","gutterBottom","Table","countries","map","country","key","numeral","format","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","Map","casesType","center","zoom","TileLayer","url","attribution","Circle","countryInfo","lat","long","fillColor","fillOpacity","radius","Math","sqrt","Popup","style","backgroundImage","flag","showDataOnMap","Footer","onMouseOut","e","target","Fragment","styles","container","display","marginBottom","fontSize","marginTop","textAlign","href","rel","textDecoration","listStyleType","SocialMediaName","ProfileLink","fontAwesomeIconName","OnMouseOverColor","marginRight","onMouseOver","App","useState","setInputCountry","setCountryInfo","setCountries","mapCountries","setMapCountries","tableData","setTableData","setCasesType","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","useEffect","fetch","then","response","json","name","value","iso2","getCountriesData","onCountryChange","countryCode","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","todayDeaths","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.f8a2e2e3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport \"./InfoBox.css\";\n// import CountUp from 'react-countup';\n\nfunction InfoBox({ title, cases, total, active, isRed, ...props }) {\n  console.log(title, active);\n  return (\n    <Card\n      onClick={props.onClick}\n      className={`infoBox ${active && \"infoBox--selected\"} ${\n        isRed && \"infoBox--red\"\n      }`}\n    >\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          {title}\n        </Typography>\n        <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\n          {cases}\n          {/* <CountUp start = {0} end = {cases} duration = {2.5} separator = \",\"></CountUp> */}\n        </h2>\n\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\n          Total numbers : {total} \n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default InfoBox;\n","import React from \"react\";\nimport \"./Table.css\";\nimport numeral from \"numeral\";\n\nfunction Table({ countries }) {\n  return (\n    <div className=\"table\">\n      {countries.map((country) => (\n        <tr key={country.country}>\n          <td>{country.country}</td>\n          <td>\n            <strong>{numeral(country.cases).format(\"0,0\")}</strong>\n          </td>\n        </tr>\n      ))}\n    </div>\n  );\n}\n\nexport default Table;\n","import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000,\n  },\n};\n\nexport const sortData = (data) => {\n  let sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const showDataOnMap = (data, casesType = \"cases\") =>\n  data.map((country) => (\n    <Circle\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      fillOpacity={0.4}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          ></div>\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-confirmed\">\n            Cases: {numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  ));\n","import React from \"react\";\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\nimport \"./Map.css\";\nimport { showDataOnMap } from \"../util/util\";\n\nfunction Map({ countries, casesType, center, zoom }) {\n  return (\n    <div className=\"map\">\n      <LeafletMap center={center} zoom={zoom}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {showDataOnMap(countries, casesType)}\n      </LeafletMap>\n    </div>\n  );\n}\n\nexport default Map;","import React from \"react\";\r\nimport styles from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  const onMouseOut = (e) => {\r\n    e.target.style.color = \"#cccccc\";\r\n  };\r\n\r\n  const SocialWidget = [\r\n    {\r\n      SocialMediaName: \"LinkedIn\",\r\n      ProfileLink: \"https://www.linkedin.com/in/\",\r\n      fontAwesomeIconName: \"fab fa-linkedin\",\r\n      OnMouseOverColor: \"#4875B4\",\r\n    },\r\n    {\r\n      SocialMediaName: \"GitHub\",\r\n      ProfileLink: \"https://github.com/gokul2287\",\r\n      fontAwesomeIconName: \"fab fa-github\",\r\n      OnMouseOverColor: \"#211F1F\",\r\n    },\r\n    {\r\n      SocialMediaName: \"Medium\",\r\n      ProfileLink: \"https://\",\r\n      fontAwesomeIconName: \"fab fa-medium\",\r\n      OnMouseOverColor: \"#12100e\",\r\n    },\r\n    {\r\n      SocialMediaName: \"Twitter\",\r\n      ProfileLink: \"https://twitter.com/gocool\",\r\n      fontAwesomeIconName: \"fab fa-twitter\",\r\n      OnMouseOverColor: \"#1da1f2\",\r\n    },\r\n    {\r\n      SocialMediaName: \"Facebook\",\r\n      ProfileLink: \"https://www.facebook.com/\",\r\n      fontAwesomeIconName: \"fab fa-facebook-f\",\r\n      OnMouseOverColor: \"#1877f2\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.container}>\r\n        <h6\r\n          style={{\r\n            display: \"block\",\r\n            marginBottom: \"0px\",\r\n            fontSize: 30,\r\n            marginTop: \"40px\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Created by{\" \"}\r\n          <a\r\n            href=\"https://github.com/gokul2287/covid-tracker\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{ color: \"rgba(0,0,255,0.6)\", textDecoration: \"none\" }}\r\n          >\r\n            Gokul Agiwal\r\n          </a>\r\n        </h6>\r\n      </div>\r\n      <div className={styles.container}>\r\n        <br />\r\n        <ul className=\"list\" style={{ listStyleType: \"none\" }}>\r\n          {SocialWidget.map((data, key) => {\r\n              console.log(data.fontAwesomeIconName);\r\n            return (\r\n              <li key={key} style={{ display: \"inline-block\", marginRight: \"17px\" }}>\r\n                <a\r\n                  onMouseOver={(e) => {\r\n                    e.target.style.color = `${data.OnMouseOverColor}`;\r\n                  }}\r\n                  onMouseOut={onMouseOut}\r\n                  href={data.ProfileLink}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  style={{ color: \"#cccccc\", fontSize: \"40px\" }}\r\n                >\r\n                  <i className={`${data.fontAwesomeIconName}`}></i>\r\n                </a>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div className={styles.container}>\r\n        <h6\r\n          style={{\r\n            display: \"block\",\r\n            marginBottom: \"0px\",\r\n            fontSize: 16,\r\n            marginTop: \"20px\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Data provided by{\" \"}\r\n          <a\r\n            href=\"https://github.com/disease-sh/API\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{ color: \"rgba(0,0,255,0.6)\", textDecoration: \"none\" }}\r\n          >\r\n            disease.sh\r\n          </a>\r\n        </h6>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./components/InfoBox/InfoBox\";\nimport LineGraph from \"./components/LineGraph/LineGraph\";\nimport Table from \"./components/Table/Table\";\nimport { sortData, prettyPrintStat } from \"./components/util/util\";\nimport numeral from \"numeral\";\nimport Map from \"./components/Map/Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport Footer from './components/Footer/Footer';\n\n\nconst App = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  console.log(casesType);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Today's COVID Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={(countryInfo.todayCases)}\n            total={(countryInfo.cases)}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Today's Recovered Cases \"\n            active={casesType === \"recovered\"}\n            cases={(countryInfo.todayRecovered)}\n            total={(countryInfo.recovered)}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Today's Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={(countryInfo.todayDeaths)}\n            total={(countryInfo.deaths)}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            {/* <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} /> */}\n          </div>\n        </CardContent>\n      </Card>\n      <Footer></Footer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__1_yeh\"};"],"sourceRoot":""}